let canvas = document.querySelector("canvas");

canvas.width = 300;
canvas.height = 500;

let context = canvas.getContext("2d");

let mouse = {
  x: undefined,
  y: undefined,
};

let randomColor = ["#BDBAB9", "#FF5319", "#FF4000", "#00B389", "#00FFC4"];

window.addEventListener("mousemove", (e) => {
  console.log(e);
  mouse.x = event.x;
  mouse.y = event.y;
});

window.addEventListener("mouseout", (e) => {
  console.log(e);
  mouse.x = -145;
  mouse.y = -145;
});


function Ball(x, y, dx, dy, radius) {
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this.radius = radius;
  this.color = randomColor[Math.floor(Math.random() * randomColor.length)];

  this.draw = function () {
    context.beginPath();
    context.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
    context.fillStyle = this.color;
    context.fill();
    // context.stroke();
  };

  this.update = function () {
    if (this.x + this.radius > canvas.width || this.x - this.radius < 0) {
      this.dx = -this.dx;
    }
    if (this.y + this.radius > canvas.height || this.y - this.radius < 0) {
      this.dy = -this.dy;
    }

    this.x += this.dx;
    this.y += this.dy;

    //interactivty
    let maxRadius = 45;
    let minRadius = 6;
    if (
      mouse.x - this.x < maxRadius &&
      mouse.x - this.x > -maxRadius &&
      this.radius < maxRadius
    ) {
      if (
        mouse.y - this.y < maxRadius &&
        mouse.y - this.y > -maxRadius &&
        this.radius < maxRadius
      ) {
        this.radius += 1;
      }
    } else if (this.radius > minRadius) {
      this.radius -= 1;
    }

    this.draw();
  };
}

let balls = [];
function init() {
  for (let i = 0; i < 400; i++) {
    let radius = Math.random() * 5 + 1;
    let x = Math.random() * (innerWidth - radius * 2) + radius;
    let dx = Math.random() - 0.5;
    let y = Math.random() * (innerHeight - radius * 2) + radius;
    let dy = Math.random() - 0.5;

    balls.push(new Ball(x, y, dx, dy, radius));
  }
}

function animate() {
  requestAnimationFrame(animate);
  context.clearRect(0, 0, innerWidth, innerHeight);
  for (let j = 0; j < balls.length; j++) {
    balls[j].update();
  }
}

init();
animate();